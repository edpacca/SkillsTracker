@page "/admin-users"
@inject HttpClient Http
@rendermode InteractiveServer

<h2>Admin: Manage Users</h2>

<div>
    <UserCreation OnFormSubmit="@SaveUser" />
</div>
<hr />
<div>
    <table>
        <thead>
            <tr>
                <th>Id</th>
                <th>Name</th>
                <th>Email</th>
            </tr>
        </thead>
        <tbody class="cell-hover">
            @foreach (var user in users)
            {
                <UserInfo User=@user OnUserEditSubmit="SaveUser" />
            }
        </tbody>
    </table>
</div>



@code {
    private List<User> users = [];
    private User newUser = new User();
    private User? editingUser;

    protected override async Task OnInitializedAsync()
    {
        await RefreshUserList();
    }

    private async Task SaveUser(User? user)
    {
        if (user != null)
        {
            var response = await Http.PostAsJsonAsync("api/users", user);
            if (response.StatusCode == HttpStatusCode.OK)
            {
                await RefreshUserList();
            }
        }
    }

    private async Task EditUser(User user)
    {
        if (user != null)
        {
            var url = String.Format("api/users/{0}", user.Id);
            var response = await Http.PutAsJsonAsync(url, user);
            if (response.StatusCode == HttpStatusCode.OK)
            {
                await RefreshUserList();
            }
        }
    }

    private async Task RefreshUserList()
    {
        var response = await Http.GetFromJsonAsync<List<User>>("api/users");
        users = response ?? [];
    }

    private async Task DeleteUser(int userId)
    {
        await Http.DeleteAsync($"api/users/{userId}");
    }
}
